<?php

class putController  {
/**
 * $columnName White listed columns by table/name
 * @var array
 */
    	protected $columnName = array(
            'customer' => array (
                'pkey' => true,
                'ep_user' => true,                
                'ep_user_pass' => true,
                'ep_admin_pass' => true,
                'dflt_redirecturl' => true,
                'dflt_sipurl' => true,
                'ldapbase' => true,
                'ldaphost' => true,
                'ldapuser' => true,
                'ldappass' => true,
                'parent' => true,
                'z_updater' => true
            ),
            'endpoint' => array (
                'pkey' => true,
                'customer' => true,
                'displayname' => true,
                'redirecturl' => true,
                'mode' => true,
                'provision' => true,
                'sipaccount' => true,
                'sippass' => true,
                'sipurl' => true,
                'z_updater' => true
            ),
            'template' => array (
                'pkey' => true, 
                'parent' => true,
                'customer' => true,
                'provision' => true,
                'z_updater' => true
            )
        ); 	

    public function __construct($db,$input,$response)
    {
       	
       $this->db = $db;
       $this->input = $input;
       $this->response = $response;

    }

    public function put($table) 
    { 
		if (empty($this->input['pkey'])) {
        	$result ['reason'] = "EMPTY PRIMARY KEY";
            return $this->response->withJson($result,400);      	
    	}
    	$helper = new modelHelper();
    	$this->input['z_updater'] = $helper->getRemoteIP();
    	$cols = null;
    	$vals = array();
    	foreach ($this->input as $key => $val) {
    		if (empty($this->columnName[$table][$key])) {
    			$result ['reason'] = "Invalid column " . $table . ' => ' . $key;
            	return $this->response->withJson($result,403);
    		}
            if ($key == 'pkey') {
                continue;
            }
    		else {
    			$cols .= $key . '=?,';
    			$vals[] = $val;
    		}
    	}

    	if (empty($cols)) {
    			$result ['reason'] = "Empty column list";
            	return $this->response->withJson($result,403);    		
    	}
        $vals[] = $this->input['pkey'];
    	$cols = rtrim($cols,',');

   		try {
        	$sth = $this->db->prepare("UPDATE $table SET $cols WHERE pkey=?");
        	$sth->execute($vals);
        } catch (exception $e) {
        	$result ['reason'] = $e->getMessage();
            return $this->response->withJson($result,500);        
        }        
    	return $this->response->withJson($this->input,200);
    }


}