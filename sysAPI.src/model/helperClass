<?php

class modelHelper  {
/**
 * getVendorFromMac return vendor short name from mac address 
 * @param  string $mac MAC address without delimiters [:|-]
 * @return string vendor name 
 *  */
	public function getVendorFromMac($mac) {
        $short_vendor = NULL;
        $shortmac = strtoupper(substr($mac,0,6));
        preg_match(" /^([0-9A-F][0-9A-F])([0-9A-F][0-9A-F])([0-9A-F][0-9A-F])$/ ", $shortmac,$matches);
        $findmac = $matches[1] . ':' . $matches[2] . ':' . $matches[3];
        $vendorline = `grep -i $findmac  ../../scripts/manuf.txt`;
        $delim="\t";
        $short_vendor_cols = explode($delim,$vendorline,3);
        if ( ! empty($short_vendor_cols[1]) ) {
            $short_vendor = $short_vendor_cols[1];
        }
        if (preg_match('/(Snom|Panasonic|Yealink|Polycom|Cisco|Gigaset|Aastra|Grandstream|Vtech)/i',$short_vendor_cols[2],$matches)) {
                $short_vendor = $matches[1];
        }
        else {
            if (preg_match('/(Snom|Panasonic|Yealink|Polycom|Cisco|Gigaset|Aastra|Grandstream|Vtech)/i',$short_vendor,$matches)) {
                $short_vendor = $matches[1];
            }
            else {
                return 0;
            }
        }
        return $short_vendor;
	}  
/**
 * getRemoteIP returns the IP of the client
 * @return string IP address
 */
	public function getRemoteIP() {
    	if(!empty($_SERVER['HTTP_CLIENT_IP'])){
        //ip from share internet
        	$ip = $_SERVER['HTTP_CLIENT_IP'];
    	}elseif(!empty($_SERVER['HTTP_X_FORWARDED_FOR'])){
        //ip pass from proxy
        	$ip = $_SERVER['HTTP_X_FORWARDED_FOR'];
    	}else{
       		$ip = $_SERVER['REMOTE_ADDR'];
    	}
		return($ip);
	}	  
}
